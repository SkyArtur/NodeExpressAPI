#!/usr/lib/env node
const express = require('express')
const http = require('http')
const app = require('../app')

const port = normalizePort(process.env.PORT || '3000')
app.set('port', port)

const server = http.createServer(app)
server.listen(port)
server.on('error', onError)

function normalizePort (value) {
    let port = value
    if (isNaN(port)) return value
    if (port >= 0) return port
    return false
}

function onError (error) {
    if (error.syscall !== 'listen') {
        throw error
    }
    let bind = typeof port === 'string'
        ? `Pipe ${port}`
        : `Port ${port}`
    switch (error.code) {
        case 'EACCES':
            console.error(`${bind} requires elevated privileges.`)
            process.exit(1)
            break
        case 'EADDRINUSE':
            console.error(`${bind} is already in use.`)
            process.exit(1)
            break
        default:
            throw error
    }
}